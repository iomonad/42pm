#!/usr/bin/python
# -*- coding: utf-8 -*-
#
#	DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
#                    Version 2, December 2004
#
#  Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>
#
#  Everyone is permitted to copy and distribute verbatim or modified
#  copies of this license document, and changing it is allowed as long
#  as the name is changed.
#
#             DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
#    TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
# 
#   0. You just DO WHAT THE FUCK YOU WANT TO.

import os, sys
import argparse
from threading import Thread
import subprocess

parser = argparse.ArgumentParser(description='Scaffold 42 projects.')
parser.add_argument('--projects','-p', dest='project', action='store',
                    required=True,
                    help='Select project to scaffold')
parser.add_argument('--libft', '-l', dest='libft', action='store',
                    required=True, type=str,
                    help='Select the libft to use from Github. Ex: <username>/<libftrepo>')
parser.add_argument('--ssh', '-s', dest='ssh', action="store_true", default=False,
                    help='Use ssh instead https.')
parser.add_argument('--outdir', '-o', dest='outdir', action='store',
                    required=True,
                    help='Relative path to scaffold project')
parser.add_argument('--list', action='store',
                    help='Show list of available projects.')
parser.add_argument('--config', '-c', action='store', dest='config',
                    help='Use configuration file.')
parser.add_argument('--version', action='version', version='%(prog)s 1.0')

class Scaffolder(Thread):
    def __init__(self, args):
        Thread.__init__(self)
        self.args = args
        self.fetch = Fetcher(args)
    def mkdir(self):
        if not os.path.exists(args.outdir):
            os.makedirs(args.outdir)
    def run(self):
        self.mkdir()
        self.fetch.libftfetch()

class Fetcher(Thread):
    def __init__(self, args):
        Thread.__init__(self)
        self.args = args
    def libftfetch(self):
        if (args.ssh):
            t = "git@github.com:{}.git".format(args.libft)
        else:
            t = "http://github.com/{}".format(args.libft)
        os.chdir(args.outdir)
        subprocess.call(["git", "clone", "--depth=1", str(t)])
        os.chdir("..")
            
if __name__ == '__main__':
    args = parser.parse_args()
    scaff = Scaffolder(args)
    scaff.run()
